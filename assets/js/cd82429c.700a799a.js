"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[7310],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,f=c["".concat(s,".").concat(d)]||c[d]||u[d]||o;return n?r.createElement(f,l(l({ref:t},m),{},{components:n})):r.createElement(f,l({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6892:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},l="Split Column",i={unversionedId:"transformation/split_column",id:"transformation/split_column",title:"Split Column",description:"This transformation allows user to create new columns using the value of another column that is a delimiter separated",source:"@site/docs/transformation/split_column.md",sourceDirName:"transformation",slug:"/transformation/split_column",permalink:"/restonomer/docs/transformation/split_column",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Select Columns With Expressions",permalink:"/restonomer/docs/transformation/select_columns_with_expressions"},next:{title:"LocalFileSystem",permalink:"/restonomer/docs/persistence/file_system_persistence"}},s={},p=[],m={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"split-column"},"Split Column"),(0,a.kt)("p",null,"This transformation allows user to create new columns using the value of another column that is a delimiter separated\nstring."),(0,a.kt)("p",null,"This transformation expects user to provide below inputs:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Input Arguments"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Mandatory"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Default Value"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"from-column"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,a.kt)("td",{parentName:"tr",align:"center"},"-"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Name of the source column having delimiter separated string as a value from which new columns need to be created")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"delimiter"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,a.kt)("td",{parentName:"tr",align:"center"},"-"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The delimiter by which a string is separated")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"to-columns"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,a.kt)("td",{parentName:"tr",align:"center"},"-"),(0,a.kt)("td",{parentName:"tr",align:"left"},"It is a map of new column name against the position of the value that is needed from the delimiter separated string")))),(0,a.kt)("p",null,"For example, consider we have below restonomer response in json:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "address": "Apt-123,XYZ Building,Pune,Maharashtra"\n}\n')),(0,a.kt)("p",null,"Now, suppose the requirement is to create new columns ",(0,a.kt)("inlineCode",{parentName:"p"},"apt_number"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"society_name"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"city")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"state")," from the ",(0,a.kt)("inlineCode",{parentName:"p"},"address"),"\ncolumn as shown below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n "apt_number": "Apt-123",\n "society_name": "XYZ Building",\n "city": "Pune",\n "state": "Maharashtra"\n}\n')),(0,a.kt)("p",null,"Then, user can configure the ",(0,a.kt)("inlineCode",{parentName:"p"},"SplitColumn")," transformation in the below manner:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hocon"},'{\n  type = "SplitColumn"\n  from-column = "address"\n  delimiter = ","\n  to-columns = {\n    "apt_number" = 0\n    "society_name" = 1\n    "city" = 2\n    "state" = 3\n  }\n}\n')),(0,a.kt)("p",null,"The transformed response will have filtered records as desired:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "address": "Apt-123,XYZ Building,Pune,Maharashtra",\n  "apt_number": "Apt-123",\n  "society_name": "XYZ Building",\n  "city": "Pune",\n  "state": "Maharashtra"\n}\n')))}u.isMDXComponent=!0}}]);