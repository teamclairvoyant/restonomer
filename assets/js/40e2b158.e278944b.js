"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3405],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=l(r),m=o,g=f["".concat(s,".").concat(m)]||f[m]||u[m]||a;return r?n.createElement(g,i(i({ref:t},p),{},{components:r})):n.createElement(g,i({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[f]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5317:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={},i="RetryConfig",c={unversionedId:"config_classes/retry_config",id:"config_classes/retry_config",title:"RetryConfig",description:"The configurations related to the auto retry mechanism are represented by RetryConfig class.",source:"@site/docs/config_classes/retry_config.md",sourceDirName:"config_classes",slug:"/config_classes/retry_config",permalink:"/restonomer/docs/config_classes/retry_config",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RequestConfig",permalink:"/restonomer/docs/config_classes/request_config"},next:{title:"TokenConfig",permalink:"/restonomer/docs/config_classes/token_config"}},s={},l=[],p={toc:l},f="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(f,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"retryconfig"},"RetryConfig"),(0,o.kt)("p",null,"The configurations related to the auto retry mechanism are represented by ",(0,o.kt)("inlineCode",{parentName:"p"},"RetryConfig")," class."),(0,o.kt)("p",null,"User need to provide below configs for Retry Configuration:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Config Name"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Mandatory"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Default Value"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"max-retries"),(0,o.kt)("td",{parentName:"tr",align:"center"},"No"),(0,o.kt)("td",{parentName:"tr",align:"center"},"20"),(0,o.kt)("td",{parentName:"tr",align:"left"},"This config tells restonomer the maximum number of attempts to retry in case of a request failure")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"status-codes-to-retry"),(0,o.kt)("td",{parentName:"tr",align:"center"},"No"),(0,o.kt)("td",{parentName:"tr",align:"center"},"[403, 429, 502, 401, 500, 504, 503, 408]"),(0,o.kt)("td",{parentName:"tr",align:"left"},"This config provides the restonomer with the list of response status codes for which user wants restonomer to retry the request.")))),(0,o.kt)("p",null,"The retry configurations are provided in the checkpoint file in the below manner:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hocon"},"retry = {\n  max-retries = 5\n  status-codes-to-retry = [429, 301]\n}\n")))}u.isMDXComponent=!0}}]);