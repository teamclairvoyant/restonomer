"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5523],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},i="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),i=p(n),d=r,f=i["".concat(c,".").concat(d)]||i[d]||u[d]||o;return n?a.createElement(f,l(l({ref:t},m),{},{components:n})):a.createElement(f,l({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[i]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8788:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},l="Change Column Case",s={unversionedId:"transformation/change_column_case",id:"transformation/change_column_case",title:"Change Column Case",description:"It lets the user change the case of the column names.",source:"@site/docs/transformation/change_column_case.md",sourceDirName:"transformation",slug:"/transformation/change_column_case",permalink:"/restonomer/docs/transformation/change_column_case",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cast Nested Column",permalink:"/restonomer/docs/transformation/cast_nested_column"},next:{title:"Coalesce Columns",permalink:"/restonomer/docs/transformation/coalesce_columns"}},c={},p=[],m={toc:p},i="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(i,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"change-column-case"},"Change Column Case"),(0,r.kt)("p",null,"It lets the user change the case of the column names."),(0,r.kt)("p",null,"This transformation expects user to provide below inputs:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Input Arguments"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Mandatory"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"target-case-type"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,r.kt)("td",{parentName:"tr",align:"center"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Supported case types (lower,upper,snake,kebab,camel,pascal)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"source-case-type"),(0,r.kt)("td",{parentName:"tr",align:"center"},"No"),(0,r.kt)("td",{parentName:"tr",align:"center"},"lower"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Supported case types (snake,kebab,camel,pascal)")))),(0,r.kt)("p",null,"Below is a quick helper chart to understand commonly used case types and their general usage"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Input Arguments"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Example"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Usage"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Camel"),(0,r.kt)("td",{parentName:"tr",align:"center"},"myVariableName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used for variables, methods, and parameter names")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Pascal"),(0,r.kt)("td",{parentName:"tr",align:"center"},"MyClassName"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used for class names and type names")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Snake"),(0,r.kt)("td",{parentName:"tr",align:"center"},"my_variable_name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used for variable names in some scripting languages")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Kebab"),(0,r.kt)("td",{parentName:"tr",align:"center"},"my-variable-name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Used for configurations, file names, URLs, and command-line arguments")))),(0,r.kt)("p",null,"For example, consider we have below restonomer response in json:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "col_a": "1",\n  "COL_B": "2"\n}\n')),(0,r.kt)("p",null,"Now, as we know all these columns are in snake-case, suppose the requirement is to transform case of all columns to camel case."),(0,r.kt)("p",null,"Then, user can configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeColumnCase")," transformation in the below manner:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hocon"},'{\n  type = "ChangeColumnCase"\n  target-case-type = "camel"\n  source-case-type = "snake"\n}\n')),(0,r.kt)("p",null," The transformed response will now have the columns with the desired case type:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "colA": "1",\n  "colB": "2"\n}\n')),(0,r.kt)("p",null,'Remember that, for converting the case to "lower" or "upper" user need not give source-case-type as it will not matter for the conversion.\nHowever, for any other target case type user needs to provide an appropriate source-case-type. Otherwise, Restonomer will error out.'))}u.isMDXComponent=!0}}]);