"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6242],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=s(n),k=o,d=u["".concat(p,".").concat(k)]||u[k]||m[k]||i;return n?r.createElement(d,c(c({ref:t},l),{},{components:n})):r.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=k;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[u]="string"==typeof e?e:o,c[1]=a;for(var s=2;s<i;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},7334:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:2},c="Checkpoints",a={unversionedId:"restonomer_context/checkpoints",id:"restonomer_context/checkpoints",title:"Checkpoints",description:"A checkpoint is the main entry point for any request trigger via restonomer.",source:"@site/docs/restonomer_context/checkpoints.md",sourceDirName:"restonomer_context",slug:"/restonomer_context/checkpoints",permalink:"/restonomer/docs/restonomer_context/checkpoints",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Restonomer Context Directory",permalink:"/restonomer/docs/restonomer_context/restonomer_context_directory"},next:{title:"Application Configurations",permalink:"/restonomer/docs/restonomer_context/application_configurations"}},p={},s=[],l={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"checkpoints"},"Checkpoints"),(0,o.kt)("p",null,"A checkpoint is the main entry point for any request trigger via restonomer.\nA checkpoint is a configuration that you need to provide in the HOCON format to the restonomer application."),(0,o.kt)("p",null,"A checkpoint configuration is basically represented using the case class ",(0,o.kt)("inlineCode",{parentName:"p"},"CheckpointConfig"),"."),(0,o.kt)("p",null,"User would need to write a checkpoint configuration in a file and keep it in ",(0,o.kt)("inlineCode",{parentName:"p"},"checkpoints")," directory under restonomer context directory."),(0,o.kt)("p",null,"Below is the sample checkpoint configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hocon"},'name = "sample_postman_checkpoint"\n\ntoken = {\n  token-request = {\n    url = "http://localhost:8080/token-response-body"\n\n    authentication = {\n      type = "BearerAuthentication"\n      bearer-token = "test_token_123"\n    }\n  }\n\n  token-response-placeholder = "ResponseBody"\n}\n\ndata = {\n  data-request = {\n    url = "https://postman-echo.com/basic-auth"\n\n    authentication = {\n      type = "BasicAuthentication"\n      user-name = "postman"\n      password = "token[$.secret]"\n    }\n  }\n\n  data-response = {\n    body = {\n      type = "Text"\n      text-format = {\n        type = "JSONTextFormat"\n      }\n    }\n\n    persistence = {\n      type = "LocalFileSystem"\n      file-format = {\n        type = "ParquetFileFormat"\n      }\n      file-path = "./rest-output/"\n    }\n  }\n}\n\nspark-configs = {\n  "spark.app.name" = "sample_postman_checkpoint"\n}\n')),(0,o.kt)("p",null,"You can place a checkpoint file either:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"directly under ",(0,o.kt)("inlineCode",{parentName:"p"},"checkpoints")," directory")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"or you can have subdirectories under ",(0,o.kt)("inlineCode",{parentName:"p"},"checkpoints")," directory and can keep checkpoint files in that subdirectory"))),(0,o.kt)("p",null,"For example, ",(0,o.kt)("inlineCode",{parentName:"p"},"checkpoints")," directory can have below structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"restonomer_context\\\n    -   checkpoints\\\n            -   checkpoint_1.conf\n            -   checkpoint_2.conf\n            -   sub_dir_1\\\n                    -   checkpoint_3.conf\n                    -   checkpoint_4.conf\n                    -   sub_dir_2\\\n                            -   checkpoint_5.conf\n            -   sub_dir_3\\\n                    -   checkpoint_6.conf\n")),(0,o.kt)("p",null,"This kind of hierarchical structure helps user to categorise their checkpoints by keeping set of files in different subdirectories."))}m.isMDXComponent=!0}}]);