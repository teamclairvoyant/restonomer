"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9543],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>k});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,k=u["".concat(p,".").concat(m)]||u[m]||h[m]||i;return t?r.createElement(k,c(c({ref:n},l),{},{components:t})):r.createElement(k,c({ref:n},l))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=m;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[u]="string"==typeof e?e:o,c[1]=a;for(var s=2;s<i;s++)c[s]=t[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4754:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:1},c="Run single checkpoint",a={unversionedId:"running_checkpoints/run_single_checkpoint",id:"running_checkpoints/run_single_checkpoint",title:"Run single checkpoint",description:"Once you have defined a checkpoint configuration file, then the next step is to trigger the checkpoint.",source:"@site/docs/running_checkpoints/run_single_checkpoint.md",sourceDirName:"running_checkpoints",slug:"/running_checkpoints/run_single_checkpoint",permalink:"/restonomer/docs/running_checkpoints/run_single_checkpoint",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Config Variables",permalink:"/restonomer/docs/restonomer_context/config_variables"},next:{title:"Run checkpoints under specific directory",permalink:"/restonomer/docs/running_checkpoints/run_checkpoints_under_specific_dir"}},p={},s=[],l={toc:s},u="wrapper";function h(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"run-single-checkpoint"},"Run single checkpoint"),(0,o.kt)("p",null,"Once you have defined a checkpoint configuration file, then the next step is to trigger the checkpoint."),(0,o.kt)("p",null,"The restonomer framework provides you the way to execute just a single checkpoint."),(0,o.kt)("p",null,"This can be achieved using the method ",(0,o.kt)("inlineCode",{parentName:"p"},"runCheckpoint(checkpointFilePath)")," provided by ",(0,o.kt)("inlineCode",{parentName:"p"},"restonomerContext")," instance."),(0,o.kt)("p",null,"The only thing needed from you is the path of the configuration file relative to the ",(0,o.kt)("inlineCode",{parentName:"p"},"checkpoints")," directory."),(0,o.kt)("p",null,"For example, suppose you have below restonomer context directory structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"restonomer_context\\\n    -   checkpoints\\\n            -   checkpoint_1.conf\n            -   checkpoint_2.conf\n            -   sub_dir_1\\\n                    -   checkpoint_3.conf\n")),(0,o.kt)("p",null,"Then you can trigger the ",(0,o.kt)("inlineCode",{parentName:"p"},"checkpoint_1.conf")," in the below manner:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import com.clairvoyant.restonomer.core.app.RestonomerContext\n\nprivate val restonomerContextDirectoryPath = "./restonomer_context"\nprivate val restonomerContext = RestonomerContext(restonomerContextDirectoryPath)\n\nrestonomerContext.runCheckpoint(checkpointFilePath = "checkpoint_1.conf")\n')),(0,o.kt)("p",null,"And, if you want to trigger the checkpoint ",(0,o.kt)("inlineCode",{parentName:"p"},"checkpoint_3.conf")," that is kept under ",(0,o.kt)("inlineCode",{parentName:"p"},"sub_dir_1")," directory inside ",(0,o.kt)("inlineCode",{parentName:"p"},"checkpoints")," folder,\nthen you can trigger the same in below manner:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import com.clairvoyant.restonomer.core.app.RestonomerContext\n\nprivate val restonomerContextDirectoryPath = "./restonomer_context"\nprivate val restonomerContext = RestonomerContext(restonomerContextDirectoryPath)\n\nrestonomerContext.runCheckpoint(checkpointFilePath = "sub_dir_1/checkpoint_3.conf")\n')))}h.isMDXComponent=!0}}]);