"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[42],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),a=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=a(e.components);return r.createElement(s.Provider,{value:n},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=a(t),f=o,h=l["".concat(s,".").concat(f)]||l[f]||d[f]||i;return t?r.createElement(h,c(c({ref:n},u),{},{components:t})):r.createElement(h,c({ref:n},u))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=f;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[l]="string"==typeof e?e:o,c[1]=p;for(var a=2;a<i;a++)c[a]=t[a];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4797:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>a});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:2},c="Run checkpoints under specific directory",p={unversionedId:"running_checkpoints/run_checkpoints_under_specific_dir",id:"running_checkpoints/run_checkpoints_under_specific_dir",title:"Run checkpoints under specific directory",description:"There may be a situation where you would be interested in triggering all checkpoints kept under specific directory",source:"@site/docs/running_checkpoints/run_checkpoints_under_specific_dir.md",sourceDirName:"running_checkpoints",slug:"/running_checkpoints/run_checkpoints_under_specific_dir",permalink:"/restonomer/docs/running_checkpoints/run_checkpoints_under_specific_dir",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Run single checkpoint",permalink:"/restonomer/docs/running_checkpoints/run_single_checkpoint"},next:{title:"Run all checkpoints",permalink:"/restonomer/docs/running_checkpoints/run_all_checkpoints"}},s={},a=[],u={toc:a},l="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(l,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"run-checkpoints-under-specific-directory"},"Run checkpoints under specific directory"),(0,o.kt)("p",null,"There may be a situation where you would be interested in triggering all checkpoints kept under specific directory\nin checkpoints folder."),(0,o.kt)("p",null,"The restonomer framework provides you with an option to run all checkpoints kept under specific directory using the method\n",(0,o.kt)("inlineCode",{parentName:"p"},"runCheckpointsUnderDirectory(checkpointsDirectoryPath)")),(0,o.kt)("p",null,"The only input required from user is the path of the directory relative to the ",(0,o.kt)("inlineCode",{parentName:"p"},"checkpoints")," folder."),(0,o.kt)("p",null,"Suppose, if you want to run all checkpoints kept under ",(0,o.kt)("inlineCode",{parentName:"p"},"sub_dir_1")," directory, then it can be done in below manner:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import com.clairvoyant.restonomer.core.app.RestonomerContext\n\nprivate val restonomerContextDirectoryPath = "./restonomer_context"\nprivate val restonomerContext = RestonomerContext(restonomerContextDirectoryPath)\n\nrestonomerContext.runCheckpoint(checkpointsDirectoryPath = "sub_dir_1")\n')))}d.isMDXComponent=!0}}]);