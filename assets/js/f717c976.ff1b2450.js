"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[7420],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=c(n),d=a,f=s["".concat(p,".").concat(d)]||s[d]||u[d]||l;return n?r.createElement(f,o(o({ref:t},m),{},{components:n})):r.createElement(f,o({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5870:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={},o="Replace String In Column Name",i={unversionedId:"transformation/replace_string_in_column_name",id:"transformation/replace_string_in_column_name",title:"Replace String In Column Name",description:"It lets the user replace the pattern in the column name specified by user with the other text.",source:"@site/docs/transformation/replace_string_in_column_name.md",sourceDirName:"transformation",slug:"/transformation/replace_string_in_column_name",permalink:"/restonomer/docs/transformation/replace_string_in_column_name",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Replace Nulls With Default Value",permalink:"/restonomer/docs/transformation/replace_nulls_with_default_value"},next:{title:"Replace String In Column Value",permalink:"/restonomer/docs/transformation/replace_string_in_column_value"}},p={},c=[],m={toc:c},s="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"replace-string-in-column-name"},"Replace String In Column Name"),(0,a.kt)("p",null,"It lets the user replace the pattern in the column name specified by user with the other text."),(0,a.kt)("p",null,"This transformation expects user to provide below inputs:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Input Arguments"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Mandatory"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Default Value"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"column-name"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,a.kt)("td",{parentName:"tr",align:"center"},"-"),(0,a.kt)("td",{parentName:"tr",align:"left"},"It is the column name")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"pattern"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,a.kt)("td",{parentName:"tr",align:"center"},"-"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The values that needs to be replaced")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"replacement"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,a.kt)("td",{parentName:"tr",align:"center"},"-"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The value that replaces the pattern")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"replace-recursively"),(0,a.kt)("td",{parentName:"tr",align:"center"},"No"),(0,a.kt)("td",{parentName:"tr",align:"center"},"False"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Flag to determine if operation needs to be performed at root level only or at nested level")))),(0,a.kt)("p",null,"For example, consider we have below restonomer response in json:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "col_A": 5,\n  "col_B": 4,\n  "col_D": {\n    "col_B": 6\n  },\n  "col_F": [\n    {\n      "col_B": 4.356343\n    }\n  ]\n}\n')),(0,a.kt)("p",null,"Now, suppose the requirement is to replace the ",(0,a.kt)("inlineCode",{parentName:"p"},"_B")," in column name ",(0,a.kt)("inlineCode",{parentName:"p"},"col_B")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"_B_test")," at root and nested level."),(0,a.kt)("p",null,"Then, user can configure the ",(0,a.kt)("inlineCode",{parentName:"p"},"ReplaceStringInColumnName")," transformation in the below manner:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hocon"},'{\n  type = "ReplaceStringInColumnName"\n  column-name = "col_B"\n  pattern = "_B"\n  replacement = "_B_test"\n  replace-recursively = true\n}\n')),(0,a.kt)("p",null,"The transformed response will have the replaced value or pattern in the desired column as shown below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "col_A": 5,\n  "col_B_test": 4,\n  "col_D": {\n    "col_B_test": 6\n  },\n  "col_F": [\n    {\n      "col_B_test": 4.356343\n    }\n  ]\n}\n')))}u.isMDXComponent=!0}}]);