"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[4146],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=i(n),f=o,d=u["".concat(s,".").concat(f)]||u[f]||m[f]||a;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,l[1]=c;for(var i=2;i<a;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3928:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var r=n(7462),o=(n(7294),n(3905));const a={},l="Convert Column To Json",c={unversionedId:"transformation/convert_column_to_json",id:"transformation/convert_column_to_json",title:"Convert Column To Json",description:"It lets the user convert MapType or Struct type to JSON string.",source:"@site/docs/transformation/convert_column_to_json.md",sourceDirName:"transformation",slug:"/transformation/convert_column_to_json",permalink:"/restonomer/docs/transformation/convert_column_to_json",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Convert Array Of Struct To Array Of JSON String",permalink:"/restonomer/docs/transformation/convert_array_of_struct_to_array_of_json_string"},next:{title:"Convert JSON String To Struct",permalink:"/restonomer/docs/transformation/convert_json_string_to_struct"}},s={},i=[],p={toc:i},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"convert-column-to-json"},"Convert Column To Json"),(0,o.kt)("p",null,"It lets the user convert MapType or Struct type to JSON string."),(0,o.kt)("p",null,"This transformation expects user to provide below inputs:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input Arguments"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Mandatory"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Default Value"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"column-name"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Yes"),(0,o.kt)("td",{parentName:"tr",align:"center"},"-"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Name of the column which needs to be transformed")))),(0,o.kt)("p",null,"For example, consider we have below restonomer response in json:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "col_A": "1",\n  "col_B": [\n    {\n      "Zipcode": 704,\n      "ZipCodeType": "STANDARD"\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"Now, suppose the requirement is to transform col_B to json string:"),(0,o.kt)("p",null,"Then, user can configure the ",(0,o.kt)("inlineCode",{parentName:"p"},"ConvertColumnToJson")," transformation in the below manner:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hocon"},'{\n  type = "ConvertColumnToJson"\n  column-name = "col_B"\n}\n')),(0,o.kt)("p",null,"The transformed response will now have the columns with the desired data types:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},"{\n  \"col_A\": 1,\n  \"col_B\": \"[{'ZipCodeType':'STANDARD','Zipcode':704}]\"\n}\n")))}m.isMDXComponent=!0}}]);