"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1560],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,f=u["".concat(l,".").concat(d)]||u[d]||c[d]||o;return r?n.createElement(f,i(i({ref:t},m),{},{components:r})):n.createElement(f,i({ref:t},m))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4522:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:9},i="Retry Mechanism",s={unversionedId:"restonomer_retry",id:"restonomer_retry",title:"Retry Mechanism",description:"Restonomer makes sure that its auto retry mechanism makes another attempt to retrieve the relevant information in the",source:"@site/docs/restonomer_retry.md",sourceDirName:".",slug:"/restonomer_retry",permalink:"/restonomer/docs/restonomer_retry",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Text Data Body",permalink:"/restonomer/docs/request_body/text_data_body"},next:{title:"CSV",permalink:"/restonomer/docs/response_body/text/csv_text"}},l={},p=[],m={toc:p},u="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"retry-mechanism"},"Retry Mechanism"),(0,a.kt)("p",null,"Restonomer makes sure that its auto retry mechanism makes another attempt to retrieve the relevant information in the\nevent of a request failure, depending on the type of status code it receives as a response. "),(0,a.kt)("p",null,"Your application will be much more robust and be able to deal with potential temporary failures of the services you rely on."),(0,a.kt)("h1",{id:"configs-for-retry"},"Configs for retry"),(0,a.kt)("p",null,"Restonomer framework expects user to provide below two arguments in case they want to override the auto retry behaviour\nof restonomer:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"max-retries")," "),(0,a.kt)("p",{parentName:"li"},"This config tells restonomer the maximum number of attempts to retry in case of a request failure. Default value is ",(0,a.kt)("inlineCode",{parentName:"p"},"20"),"."))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"status-codes-to-retry")),(0,a.kt)("p",{parentName:"li"},"This config provides the restonomer with the list of response status codes for which user wants restonomer to retry the\nrequest. Default value is ",(0,a.kt)("inlineCode",{parentName:"p"},"[403, 429, 502, 401, 500, 504, 503, 408]")))),(0,a.kt)("h1",{id:"default-retry-behaviour"},"Default Retry Behaviour"),(0,a.kt)("p",null,"The restonomer framework behaves different for different status codes.\nThe below table gives the summary of the default retry behaviour of restonomer for different status codes:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Response Status Code"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Retry Behaviour"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"200 - Ok"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Returns the response body")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"204 - NoContent"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Throws ",(0,a.kt)("inlineCode",{parentName:"td"},"RestonomerException")," with the message ",(0,a.kt)("inlineCode",{parentName:"td"},"No Content"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"302 - Found"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Retrieves the new uri from the ",(0,a.kt)("inlineCode",{parentName:"td"},"Location")," response header and retry the request with new uri")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("inlineCode",{parentName:"strong"},"status-codes-to-retry"))),(0,a.kt)("td",{parentName:"tr",align:"center"},"Retries the request for max ",(0,a.kt)("inlineCode",{parentName:"td"},"max-retries")," attempts. If still the status is not OK, then throws ",(0,a.kt)("inlineCode",{parentName:"td"},"RestonomerException"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Others"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Throws ",(0,a.kt)("inlineCode",{parentName:"td"},"RestonomerException")," with the proper error message")))))}c.isMDXComponent=!0}}]);